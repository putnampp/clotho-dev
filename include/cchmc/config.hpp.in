/*******************************************************************************
 * Copyright (c) 2013, Patrick P. Putnam (putnampp@gmail.com)
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met: 
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer. 
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution. 
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * The views and conclusions contained in the software and documentation are those
 * of the authors and should not be interpreted as representing official policies,
 * either expressed or implied, of the FreeBSD Project.
 ******************************************************************************/
#ifndef CCHMC_CONFIG_HPP_
#define CCHMC_CONFIG_HPP_

#ifndef MAX_ALLELES
#define    MAX_ALLELES ${MAX_ALLELES}
#endif  // MAX_ALLELES

#if MAX_ALLELES < 0
#error  Cannot have negative alleles
#endif  // MAX_ALLELES

#ifndef PWORD_SIZE
#define PWORD_SIZE ${PWORD_SIZE}
#endif  // define PWORD_SIZE

#if PWORD_SIZE == 64
typedef unsigned long pword_t;
#elif PWORD_SIZE == 32
typedef unsigned int pword_t;
#elif PWORD_SIZE == 16
typedef unsigned short pword_t;
#elif PWORD_SIZE == 8
typedef unsigned char pword_t;
#else
#error Unexpected processor word bit length
#endif  // pword_t

#include "Allele.h"

typedef unsigned char   byte_t;
typedef unsigned int    pos_t;

typedef unsigned char   chromid_t;

#if BITS_PER_ALLELE > PWORD_SIZE
#error Allele bit representation is greater than processor word size
#endif  // allele_size v pword_size

static const int ALLELES_PER_PWORD = PWORD_SIZE / BITS_PER_ALLELE;

#include "../common.h"

#endif  // CCHMC_CONFIG_H_
